/* @ sourceURL=kamadatepicker.js */
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/kamadatepicker.js":
/*!*******************************!*\
  !*** ./src/kamadatepicker.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// require(\"./kamadatepicker.scss\");\nwindow.kamaDatepicker = kamaDatepicker;\n\nfunction kamaDatepicker(elementID, opt) {\n  // check arguments\n  if (typeof elementID !== \"string\" || elementID.length === 0) {\n    console.error(\"kamadatepicker error: input ID is not string or is empty\");\n    return;\n  }\n\n  var options = opt || {}; // variables\n\n  var isCalClicked = false;\n  var isSynced = false;\n  var dayOfWeek;\n  var selectedYear;\n  var selectedMonth;\n  var selectedDay;\n  var currentYear;\n  var currentMonth;\n  var currentDay;\n  var todaysYear;\n  var todaysMonth;\n  var todaysDay;\n  var dayOfWeekJ;\n  var numberOfDays;\n  var todayG;\n  var todaysJ; // consts\n\n  var MONTH_NAMES = {\n    \"1\": \"فروردین\",\n    \"2\": \"اردیبهشت\",\n    \"3\": \"خرداد\",\n    \"4\": \"تیر\",\n    \"5\": \"مرداد\",\n    \"6\": \"شهریور\",\n    \"7\": \"مهر\",\n    \"8\": \"آبان\",\n    \"9\": \"آذر\",\n    \"10\": \"دی\",\n    \"11\": \"بهمن\",\n    \"12\": \"اسفند\"\n  };\n  var DAY_NAMES = {\n    \"شنبه\": \"ش\",\n    \"یکشنبه\": \"ی\",\n    \"دوشنبه\": \"د\",\n    \"سه شنبه\": \"س\",\n    \"چهارشنبه\": \"چ\",\n    \"پنج شنبه\": \"پ\",\n    \"جمعه\": \"ج\"\n  };\n  var FA_NUMS = ['٠', '١', '٢', '٣', '۴', '۵', '۶', '٧', '٨', '٩', '١٠', '١١', '١٢', '١٣', '١۴', '١۵', '١۶', '١٧', '١٨', '١٩', '٢٠', '٢١', '٢٢', '٢٣', '٢۴', '٢۵', '٢۶', '٢٧', '٢٨', '٢٩', '٣٠', '٣١', '٣٢'];\n  var HOLIDAYS = [{\n    month: 1,\n    day: 1\n  }, {\n    month: 1,\n    day: 2\n  }, {\n    month: 1,\n    day: 3\n  }, {\n    month: 1,\n    day: 4\n  }, {\n    month: 1,\n    day: 12\n  }, {\n    month: 1,\n    day: 13\n  }, {\n    month: 3,\n    day: 14\n  }, {\n    month: 3,\n    day: 15\n  }, {\n    month: 11,\n    day: 22\n  }, {\n    month: 12,\n    day: 29\n  }]; // set options\n\n  options.placeholder = options.placeholder !== undefined ? options.placeholder : \"روز/ماه/سال\";\n  options.twodigit = options.twodigit !== undefined ? options.twodigit : true;\n  options.closeAfterSelect = options.closeAfterSelect !== undefined ? options.closeAfterSelect : true;\n  options.nextButtonIcon = options.nextButtonIcon !== undefined ? options.nextButtonIcon : false;\n  options.previousButtonIcon = options.previousButtonIcon !== undefined ? options.previousButtonIcon : false;\n  options.buttonsColor = options.buttonsColor !== undefined ? options.buttonsColor : false;\n  options.forceFarsiDigits = options.forceFarsiDigits !== undefined ? options.forceFarsiDigits : false;\n  options.markToday = options.markToday !== undefined ? options.markToday : false;\n  options.markHolidays = options.markHolidays !== undefined ? options.markHolidays : false;\n  options.highlightSelectedDay = options.highlightSelectedDay !== undefined ? options.highlightSelectedDay : false;\n  options.sync = options.sync !== undefined ? options.sync : false;\n  options.gotoToday = options.gotoToday !== undefined ? options.gotoToday : false;\n  options.pastYearsCount = !isNaN(options.pastYearsCount) ? options.pastYearsCount : 95;\n  options.futureYearsCount = !isNaN(options.futureYearsCount) ? options.futureYearsCount : 6;\n  options.holidays = options.holidays || HOLIDAYS;\n  options.disableHolidays = options.disableHolidays !== undefined ? options.disableHolidays : false;\n  options.typing = options.typing !== undefined ? options.typing : false; // create DOM\n\n  var inputElement = $(\"#\" + elementID); // disable autocomplete of input\t\n\n  inputElement.attr(\"autocomplete\", 'off');\n\n  if (inputElement.attr(\"placeholder\") === undefined) {\n    inputElement.attr(\"placeholder\", options.placeholder);\n  } // create parent div\n\n\n  inputElement.wrap(\"<div id='bd-root-\" + elementID + \"' style='position: relative;'></div>\"); // create main div for calendar, below input element\n\n  inputElement.after(\"<div id='bd-main-\" + elementID + \"' class='bd-main bd-hide' style='position: absolute; direction: rtl;'></div>\");\n  var mainDiv = $(\"#bd-main-\" + elementID); // create calendar div inside main div\n\n  mainDiv.append(\"<div class='bd-calendar'></div>\");\n  var calendarDiv = mainDiv.find('.bd-calendar'); // create title div and table inside calendar div\n\n  calendarDiv.append(\"<div class='bd-title'></div>\");\n  var titleDiv = calendarDiv.find('.bd-title');\n  calendarDiv.append(\"<table class='bd-table' dir='rtl' cellspacing='0' cellpadding='0'></table>\"); // create month and year drop downs and next/prev month buttons inside title div\n\n  if (options.swapNextPrev) titleDiv.append(\"<button id='bd-prev-\" + elementID + \"' class='bd-prev' type='button' title='ماه قبلی' data-toggle='tooltip'><span>قبلی</span></button>\");else titleDiv.append(\"<button id='bd-next-\" + elementID + \"' class='bd-next' type='button' title='ماه بعدی' data-toggle='tooltip'><span>بعدی</span></button>\");\n  titleDiv.append(\"<div class='bd-dropdown'></div><div class='bd-dropdown'></div>\");\n  titleDiv.find('.bd-dropdown:nth-child(2)').append(\"<select id='bd-month-\" + elementID + \"' class='bd-month'></select>\");\n  titleDiv.find('.bd-dropdown:nth-child(3)').append(\"<select id='bd-year-\" + elementID + \"' class='bd-year'></select>\");\n  if (options.swapNextPrev) titleDiv.append(\"<button id='bd-next-\" + elementID + \"' class='bd-next' type='button' title='ماه بعدی' data-toggle='tooltip'><span>بعدی</span></button>\");else titleDiv.append(\"<button id='bd-prev-\" + elementID + \"' class='bd-prev' type='button' title='ماه قبلی' data-toggle='tooltip'><span>قبلی</span></button>\");\n  var nextMonth = $(\"#bd-next-\" + elementID);\n\n  if (options.nextButtonIcon) {\n    nextMonth.find(\"span\").css(\"display\", \"none\");\n\n    if (options.nextButtonIcon.indexOf(\".\") !== -1) {\n      // image\n      nextMonth.css(\"background-image\", \"url(\" + options.nextButtonIcon + \")\");\n    } else {\n      // css class\n      nextMonth.addClass(options.nextButtonIcon);\n    }\n  }\n\n  var monthDropdown = $(\"#bd-month-\" + elementID);\n  $.each(MONTH_NAMES, function (key, value) {\n    monthDropdown.append($(\"<option></option>\").attr(\"value\", key).text(value));\n  });\n  var yearDropdown = $(\"#bd-year-\" + elementID);\n  var prevMonth = $(\"#bd-prev-\" + elementID);\n\n  if (options.nextButtonIcon) {\n    prevMonth.find(\"span\").css(\"display\", \"none\");\n\n    if (options.previousButtonIcon.indexOf(\".\") !== -1) {\n      // image\n      prevMonth.css(\"background-image\", \"url(\" + options.previousButtonIcon + \")\");\n    } else {\n      // css class\n      prevMonth.addClass(options.previousButtonIcon);\n    }\n  }\n\n  if (options.buttonsColor) {\n    nextMonth.css(\"color\", options.buttonsColor);\n    nextMonth.find(\"span\").css(\"color\", options.buttonsColor);\n    prevMonth.css(\"color\", options.buttonsColor);\n    prevMonth.find(\"span\").css(\"color\", options.buttonsColor);\n  } // create table header and body\n\n\n  calendarDiv.find('.bd-table').append(\"<thead><tr></tr></thead>\");\n  $.each(DAY_NAMES, function (key, value) {\n    calendarDiv.find('.bd-table thead tr').append($(\"<th></th>\").text(value));\n  });\n  calendarDiv.find('.bd-table').append(\"<tbody id='bd-table-days-\" + elementID + \"' class='bd-table-days'></tbody>\");\n  var daysTable = $(\"#bd-table-days-\" + elementID); // create go to todays button\n\n  if (options.gotoToday) {\n    calendarDiv.append(\"<div class='bd-goto-today'>برو به امروز</div>\");\n    var gotoToday = calendarDiv.find(\".bd-goto-today\");\n  } // Separate the date with / when typing\n  //start\n  // debugger\n\n\n  if (options.typing) {\n    var checkValue = function checkValue(str, max) {\n      if (str.charAt(0) !== '0' || str === '00') {\n        var num = parseInt(str);\n        if (isNaN(num) || num <= 0 || num > max) num = 1;\n        str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\n      }\n\n      return str;\n    }; //end\n\n\n    $(\"#\".concat(elementID))[0].addEventListener('input', function (e) {\n      this.type = 'text';\n      var input = this.value;\n      if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3);\n      var values = input.split('/').map(function (v) {\n        return v.replace(/\\D/g, '');\n      });\n      if (values[0]) values[0] = checkValue(values[0], 31);\n      if (values[1]) values[1] = checkValue(values[1], 12);\n      var output = values.map(function (v, i) {\n        return v.length === 2 && i < 2 ? v + ' / ' : v;\n      });\n      this.value = output.join('').substr(0, 14);\n    });\n  } // opening and closing functionality\n\n\n  inputElement.on(\"focus\", function () {\n    mainDiv.removeClass(\"bd-hide\");\n\n    if (options.sync && isSynced === false) {\n      syncCalendar();\n      isSynced = true;\n    }\n\n    setCalendarPosition();\n  }).on('blur', function () {\n    if (isCalClicked == false) {\n      mainDiv.addClass(\"bd-hide\");\n      isSynced = false;\n    } else {\n      isCalClicked = false;\n      inputElement.focus();\n      event.preventDefault();\n    }\n  });\n  mainDiv.on('mousedown', function (event) {\n    isCalClicked = true;\n  }); // dropdown events\n\n  monthDropdown.on('change', function () {\n    selectedMonth = parseInt(this.value);\n    numberOfDays = monthDays(selectedYear, selectedMonth);\n    dayOfWeekJ = findFirstDayOfMonth(selectedYear, selectedMonth);\n    drawDays(numberOfDays, dayOfWeekJ);\n    setCalendarPosition();\n  });\n  yearDropdown.on('change', function () {\n    selectedYear = parseInt(this.value);\n    numberOfDays = monthDays(selectedYear, selectedMonth);\n    dayOfWeekJ = findFirstDayOfMonth(selectedYear, selectedMonth);\n    drawDays(numberOfDays, dayOfWeekJ);\n    setCalendarPosition();\n  });\n\n  function setCalendarPosition() {\n    var calendarContainer = document.querySelector(\"#bd-main-\".concat(elementID));\n    var input = document.querySelector(\"#\".concat(elementID));\n    input.offsetHeight; // input height\n\n    calendarContainer.offsetHeight; // calendar height;\n\n    if (options.position === 'top') {\n      calendarContainer.style.top = \"\".concat(-1 * calendarContainer.offsetHeight, \"px\"); // top\n    } else if (options.position === 'auto') {\n      // find parent element\n      var parentElement;\n      if (options.parentId) parentElement = document.querySelector(\"#\".concat(options.parentId));\n      if (!options.parentId || !parentElement) parentElement = document.querySelector(\"#bd-root-\".concat(elementID));\n      var elementsDistance = getDistanceBetweenElements(parentElement, input);\n      if (parentElement.offsetHeight - elementsDistance - (input.offsetHeight + calendarContainer.offsetHeight) > 0) calendarContainer.style.top = \"\".concat(input.offsetHeight, \"px\"); // bottom\n      else if (elementsDistance - (input.offsetHeight + calendarContainer.offsetHeight) > 0) calendarContainer.style.top = \"\".concat(-1 * calendarContainer.offsetHeight, \"px\"); // top\n        else calendarContainer.style.top = \"\".concat(input.offsetHeight, \"px\"); // bottom\n    } else {\n      // bottom or any other values\n      calendarContainer.style.top = \"\".concat(input.offsetHeight, \"px\"); // bottom\n    }\n\n    var isOut = isOutOfViewport(calendarContainer);\n    if (isOut.left) calendarContainer.style.left = 0;\n\n    function getPositionAtCenter(element) {\n      var _element$getBoundingC = element.getBoundingClientRect(),\n          top = _element$getBoundingC.top,\n          left = _element$getBoundingC.left;\n\n      return {\n        x: left,\n        y: top\n      };\n    }\n\n    function getDistanceBetweenElements(a, b) {\n      var aPosition = getPositionAtCenter(a);\n      var bPosition = getPositionAtCenter(b);\n      return Math.abs(aPosition.y - bPosition.y);\n    }\n\n    function isOutOfViewport(elem) {\n      // Get element's bounding\n      var bounding = elem.getBoundingClientRect(); // Check if it's out of the viewport on each side\n\n      var out = {};\n      out.top = bounding.top < 0;\n      out.left = bounding.left < 0;\n      out.bottom = bounding.bottom > (window.innerHeight || document.documentElement.clientHeight);\n      out.right = bounding.right > (window.innerWidth || document.documentElement.clientWidth);\n      out.any = out.top || out.left || out.bottom || out.right;\n      out.all = out.top && out.left && out.bottom && out.right;\n      return out;\n    }\n\n    ;\n  } // Georgian to Jalali converter (minified)\n  // source is unknown. contact if you know the code owner.\n\n\n  function gregorianToJalali(a, r, s) {\n    a = parseInt(a), r = parseInt(r), s = parseInt(s);\n\n    for (var n = a - 1600, e = r - 1, t = s - 1, p = 365 * n + parseInt((n + 3) / 4) - parseInt((n + 99) / 100) + parseInt((n + 399) / 400), I = 0; e > I; ++I) {\n      p += g_days[I];\n    }\n\n    e > 1 && (n % 4 == 0 && n % 100 != 0 || n % 400 == 0) && ++p, p += t;\n    var v = p - 79,\n        d = parseInt(v / 12053);\n    v %= 12053;\n    var o = 979 + 33 * d + 4 * parseInt(v / 1461);\n    v %= 1461, v >= 366 && (o += parseInt((v - 1) / 365), v = (v - 1) % 365);\n\n    for (var I = 0; 11 > I && v >= j_days[I]; ++I) {\n      v -= j_days[I];\n    }\n\n    var y = I + 1,\n        _ = v + 1;\n\n    return [o, y, _];\n  }\n\n  var g_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n      j_days = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29]; // Jalali to Georgian converter (minified)\n  // source is unknown. contact if you know the code owner.\n\n  function toJalaali(d, i, a) {\n    return d2j(g2d(d, i, a));\n  }\n\n  function toGregorian(d, i, a) {\n    return d2g(j2d(d, i, a));\n  }\n\n  function isValidJalaaliDate(d, i, a) {\n    return d >= -61 && 3177 >= d && i >= 1 && 12 >= i && a >= 1 && a <= jalaaliMonthLength(d, i);\n  }\n\n  function isLeapJalaaliYear(d) {\n    return 0 === jalCal(d).leap;\n  }\n\n  function jalaaliMonthLength(d, i) {\n    return 6 >= i ? 31 : 11 >= i ? 30 : isLeapJalaaliYear(d) ? 30 : 29;\n  }\n\n  function jalCal(d) {\n    var i,\n        a,\n        n,\n        r,\n        t,\n        o,\n        v,\n        e = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178],\n        l = e.length,\n        u = d + 621,\n        m = -14,\n        g = e[0];\n    if (g > d || d >= e[l - 1]) throw new Error(\"Invalid Jalaali year \" + d);\n\n    for (v = 1; l > v && (i = e[v], a = i - g, !(i > d)); v += 1) {\n      m = m + 8 * div(a, 33) + div(mod(a, 33), 4), g = i;\n    }\n\n    return o = d - g, m = m + 8 * div(o, 33) + div(mod(o, 33) + 3, 4), 4 === mod(a, 33) && a - o === 4 && (m += 1), r = div(u, 4) - div(3 * (div(u, 100) + 1), 4) - 150, t = 20 + m - r, 6 > a - o && (o = o - a + 33 * div(a + 4, 33)), n = mod(mod(o + 1, 33) - 1, 4), -1 === n && (n = 4), {\n      leap: n,\n      gy: u,\n      march: t\n    };\n  }\n\n  function j2d(d, i, a) {\n    var n = jalCal(d);\n    return g2d(n.gy, 3, n.march) + 31 * (i - 1) - div(i, 7) * (i - 7) + a - 1;\n  }\n\n  function d2j(d) {\n    var i,\n        a,\n        n,\n        r = d2g(d).gy,\n        t = r - 621,\n        o = jalCal(t),\n        v = g2d(r, 3, o.march);\n\n    if (n = d - v, n >= 0) {\n      if (185 >= n) return a = 1 + div(n, 31), i = mod(n, 31) + 1, {\n        jy: t,\n        jm: a,\n        jd: i\n      };\n      n -= 186;\n    } else t -= 1, n += 179, 1 === o.leap && (n += 1);\n\n    return a = 7 + div(n, 30), i = mod(n, 30) + 1, {\n      jy: t,\n      jm: a,\n      jd: i\n    };\n  }\n\n  function g2d(d, i, a) {\n    var n = div(1461 * (d + div(i - 8, 6) + 100100), 4) + div(153 * mod(i + 9, 12) + 2, 5) + a - 34840408;\n    return n = n - div(3 * div(d + 100100 + div(i - 8, 6), 100), 4) + 752;\n  }\n\n  function d2g(d) {\n    var i, a, n, r, t;\n    return i = 4 * d + 139361631, i = i + 4 * div(3 * div(4 * d + 183187720, 146097), 4) - 3908, a = 5 * div(mod(i, 1461), 4) + 308, n = div(mod(a, 153), 5) + 1, r = mod(div(a, 153), 12) + 1, t = div(i, 1461) - 100100 + div(8 - r, 6), {\n      gy: t,\n      gm: r,\n      gd: n\n    };\n  }\n\n  function div(d, i) {\n    return ~~(d / i);\n  }\n\n  function mod(d, i) {\n    return d - ~~(d / i) * i;\n  }\n\n  var syncCalendar = function syncCalendar() {\n    var inputValue = fixDate(inputElement.val());\n    if (inputValue === \"\") return;\n    inputValue = inputValue.split(\"/\");\n    monthDropdown.val(parseInt(inputValue[1]));\n    monthDropdown.trigger(\"change\");\n    yearDropdown.val(parseInt(inputValue[0]));\n    yearDropdown.trigger(\"change\");\n\n    if (options.highlightSelectedDay) {\n      mainDiv.find(\".bd-selected-day\").removeClass(\"bd-selected-day\");\n      mainDiv.find(\".day-\" + parseInt(inputValue[2])).addClass(\"bd-selected-day\");\n    }\n  };\n\n  var fixDate = function fixDate(date) {\n    if (date === \"\") return \"\";\n    date = date.split(\"/\"); // if (date[0].length === 2) {\n    //     date[0] = \"13\" + date[0];\n    // }\n\n    if (date[1].length < 2) {\n      if (date[1] < 10) {\n        date[1] = \"0\" + date[1];\n      }\n    }\n\n    if (date[2].length < 2) {\n      if (date[2] < 10) {\n        date[2] = \"0\" + date[2];\n      }\n    }\n\n    date = date.join(\"/\");\n    return date;\n  };\n\n  var convertToJWeek = function convertToJWeek(dayOfWeekG) {\n    var dayOfWeekJ;\n\n    if (dayOfWeekG < 6) {\n      dayOfWeekJ = dayOfWeekG + 1;\n    } else {\n      dayOfWeekJ = 0;\n    }\n\n    return dayOfWeekJ;\n  };\n\n  var makeYearList = function makeYearList(thisYear) {\n    yearDropdown.find('option').remove();\n\n    for (var i = 0; i < options.pastYearsCount + options.futureYearsCount; i++) {\n      var tempYear = thisYear - options.pastYearsCount + i + '';\n\n      if (options.forceFarsiDigits) {\n        for (var j = 0; j < 10; j++) {\n          var rgx = new RegExp(j, 'g');\n          tempYear = tempYear.replace(rgx, FA_NUMS[j]);\n        }\n      }\n\n      yearDropdown.append($('<option>', {\n        value: thisYear - options.pastYearsCount + i,\n        text: tempYear\n      }));\n    }\n  }; // isleap calculator, supported year: 1243 - 1473\n\n\n  var isLeapYear = function isLeapYear(year) {\n    var mod;\n\n    if (year > 1243 && year < 1473) {\n      mod = year % 33;\n\n      if (mod == 1 || mod == 5 || mod == 9 || mod == 13 || mod == 17 || mod == 22 || mod == 26 || mod == 30) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return \"unknown\";\n    }\n  };\n\n  var monthDays = function monthDays(year, month) {\n    if (month < 7) {\n      return 31;\n    } else if (month < 12) {\n      return 30;\n    } else {\n      if (isLeapYear(year)) {\n        return 30;\n      } else {\n        return 29;\n      }\n    }\n  }; // make first page of calendar\n\n\n  todayG = new Date();\n  todaysJ = gregorianToJalali(todayG.getFullYear(), todayG.getMonth() + 1, todayG.getDate());\n  var selectedDateJ = [];\n\n  for (var i = 0; i < 3; i++) {\n    selectedDateJ[i] = todaysJ[i];\n  }\n\n  todaysYear = todaysJ[0];\n  todaysMonth = todaysJ[1];\n  todaysDay = todaysJ[2];\n  selectedYear = selectedDateJ[0];\n  selectedMonth = selectedDateJ[1];\n  selectedDay = selectedDateJ[2];\n  monthDropdown.val(selectedMonth);\n  makeYearList(selectedYear);\n  yearDropdown.val(selectedYear);\n  numberOfDays = monthDays(selectedYear, selectedMonth); // find first day of month in week\n\n  var findFirstDayOfMonth = function findFirstDayOfMonth(selectedYear, selectedMonth) {\n    var firstDayOfMonthG = toGregorian(selectedYear, selectedMonth, 1);\n    firstDayOfMonthG = new Date(firstDayOfMonthG.gy + \"/\" + firstDayOfMonthG.gm + \"/\" + firstDayOfMonthG.gd);\n    return convertToJWeek(firstDayOfMonthG.getDay());\n  };\n\n  dayOfWeekJ = findFirstDayOfMonth(selectedYear, selectedMonth); // draw days on calendar\n\n  var drawDays = function drawDays(numberOfDays, dayOfWeekJ) {\n    daysTable.empty();\n    var dayIndex = 1;\n    var rowIndex = 1;\n\n    while (dayIndex <= numberOfDays) {\n      daysTable.append($('<tr>', {\n        \"class\": \"tr-\" + rowIndex\n      }));\n\n      for (var _i = 0; _i < 7; _i++) {\n        if (dayIndex == 1) {\n          var j = 0;\n\n          while (j < dayOfWeekJ) {\n            $(\"#bd-table-days-\" + elementID + \" .tr-1\").append($('<td>', {\n              \"class\": \"bd-empty-cell\"\n            }));\n            j++;\n            _i++;\n          }\n        }\n\n        if (_i < 7 && dayIndex <= numberOfDays) {\n          var tempTD = '<td>' + '<button class=\"day day-' + dayIndex + '\" type=\"button\">' + (options.forceFarsiDigits ? FA_NUMS[dayIndex] : dayIndex) + '</button>' + '</td>'; // mark todays day by adding .bd-today class\n\n          if (options.markToday) {\n            if (dayIndex == todaysDay && todaysMonth == selectedMonth && todaysYear == selectedYear) {\n              var idx = tempTD.indexOf('day day-');\n              tempTD = tempTD.slice(0, idx) + ' bd-today ' + tempTD.slice(idx);\n            }\n          } // mark holidays by adding .bd-holiday class\n\n\n          if (options.markHolidays) {\n            var isHoliday = false;\n\n            if (_i == 6) {\n              // weekend\n              isHoliday = true;\n            } else {\n              // check holidays\n              for (var _i2 = 0; _i2 < options.holidays.length; _i2++) {\n                var currentHoliday = options.holidays[_i2];\n\n                if ((currentHoliday.year && selectedYear === currentHoliday.year || !currentHoliday.year) && dayIndex === currentHoliday.day && selectedMonth === currentHoliday.month) {\n                  isHoliday = true;\n                  break;\n                }\n              }\n            }\n\n            if (isHoliday) {\n              var _idx = tempTD.indexOf('day day-');\n\n              tempTD = tempTD.slice(0, _idx) + ' bd-holiday ' + tempTD.slice(_idx);\n\n              if (options.disableHolidays) {\n                var dhidx = tempTD.indexOf('type=\"button\"');\n                tempTD = tempTD.slice(0, dhidx) + ' disabled ' + tempTD.slice(dhidx);\n              }\n            }\n          }\n\n          $(\"#bd-table-days-\" + elementID + \" .tr-\" + rowIndex).append(tempTD);\n          dayIndex++;\n        }\n      }\n\n      rowIndex++;\n    }\n\n    if (options.highlightSelectedDay) {\n      var inputValue = inputElement.val();\n      inputValue = inputValue.split(\"/\");\n\n      if (inputValue[0] == selectedYear && inputValue[1] == selectedMonth) {\n        mainDiv.find(\".bd-selected-day\").removeClass(\"bd-selected-day\");\n        mainDiv.find(\".day-\" + parseInt(inputValue[2])).addClass(\"bd-selected-day\");\n      }\n    }\n  };\n\n  inputElement.parent().on(\"click\", \"button.day\", function () {\n    var datestr = selectedYear + \"/\" + selectedMonth + \"/\" + $(this).attr('class').split(\" \")[$(this).attr('class').split(\" \").indexOf('day') + 1].split(\"-\")[1];\n\n    if (options.twodigit) {\n      datestr = fixDate(datestr);\n    }\n\n    inputElement.val(datestr);\n    inputElement.trigger(\"change\");\n\n    if (options.closeAfterSelect) {\n      isCalClicked = false;\n      inputElement.trigger(\"blur\");\n    }\n\n    if (options.highlightSelectedDay) {\n      mainDiv.find(\".bd-selected-day\").removeClass(\"bd-selected-day\");\n      $(this).addClass(\"bd-selected-day\");\n    }\n  });\n  nextMonth.on(\"click\", function () {\n    //console.log(\"month: \" + selectedMonth + \", year: \" + selectedYear);\n    if (monthDropdown.val() < 12) {\n      monthDropdown.val(parseInt(monthDropdown.val()) + 1);\n      monthDropdown.trigger(\"change\");\n    } else if (yearDropdown.val() != yearDropdown[0].options[yearDropdown[0].options.length - 1].value) {\n      monthDropdown.val(1);\n      monthDropdown.trigger(\"change\");\n      yearDropdown.val(parseInt(yearDropdown.val()) + 1);\n      yearDropdown.trigger(\"change\");\n    }\n  });\n  prevMonth.on(\"click\", function () {\n    if (monthDropdown.val() > 1) {\n      monthDropdown.val(parseInt(monthDropdown.val()) - 1);\n      monthDropdown.trigger(\"change\");\n    } else if (yearDropdown.val() != yearDropdown[0].options[0].value) {\n      monthDropdown.val(12);\n      monthDropdown.trigger(\"change\");\n      yearDropdown.val(parseInt(yearDropdown.val()) - 1);\n      yearDropdown.trigger(\"change\");\n    }\n  });\n\n  if (options.gotoToday) {\n    gotoToday.on(\"click\", function () {\n      monthDropdown.val(todaysMonth);\n      monthDropdown.trigger(\"change\");\n      yearDropdown.val(todaysYear);\n      yearDropdown.trigger(\"change\");\n    });\n  }\n\n  drawDays(numberOfDays, dayOfWeekJ); // enable bootstrap tooltip if bootstrap is loaded\n\n  if (typeof $().modal == 'function') {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n}\n\n//# sourceURL=webpack:///./src/kamadatepicker.js?");

/***/ }),

/***/ 0:
/*!*************************************!*\
  !*** multi ./src/kamadatepicker.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./src/kamadatepicker.js */\"./src/kamadatepicker.js\");\n\n\n//# sourceURL=webpack:///multi_./src/kamadatepicker.js?");

/***/ })

/******/ });